{"componentChunkName":"component---src-pages-index-js","path":"/","webpackCompilationHash":"6649b8a1be063c6b7f53","result":{"data":{"site":{"siteMetadata":{"title":"renuevo blog","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"설계와 아키텍처 설계(design)와 아키텍처(architecture)의 의미부터 알고 이야기를 시작하고자 한다 설계(design) 저수준의 구조와 결정사항을 의미하는 용어로 사용되어 진다    아키텍처란(architecture)  고수준의 구조와 결정사항을 의미하는 용어로 사용되어 진다 저수준의 구조와 결정사항들을 한곳에 모아 고수준으로 형태를 이루지만…","fields":{"slug":"/notion/clean-architecture-1/"},"frontmatter":{"date":"October 11, 2020","title":"[Notion] 1. 클린 아키텍처란? (Clean Architecture)","category":"Notion"}}},{"node":{"excerpt":"Levenshtein Distance (편집거리 알고리즘) 는 러시아의 과학자 블라디미르 리벤슈테인가 고안한 알고리즘   Levenshtein Distance이 무엇일까? 오늘날 언어학/데이터과학 같이 폭 넓게 사용되고 있으며 문장과 DNA 유사도 분석같은 곳에 사용되고 있습니다 레벤슈타인 알고리즘의 비교 이론은 간단합니다      이렇게 두 개의 비교군…","fields":{"slug":"/data-science/levenshtein-distance/"},"frontmatter":{"date":"April 27, 2020","title":"[DataScience] Levenshtein Distance (편집거리 알고리즘) - 문장 유사도 분석을 어떻게 하는가?","category":"Data Science"}}},{"node":{"excerpt":"Elastic을 활용하여 다음 3가지 방법의 자동완성 서비스를 구현하는 기술을 다룹니다 Elastic 7.x 버젼을 기준으로 진행합니다    Prefix Queries를 활용한 자동완성   Index 색인을 통한 Search   Completion Suggester를 활용한 자동완성   해당 포스팅에서는 를 활용한 가장 단순한 자동완성을 만드는 방법 소개…","fields":{"slug":"/elastic/autocomplete/elastic-autocomplete-1/"},"frontmatter":{"date":"April 18, 2020","title":"[Elastic] 1. Elastic 자동완성 가이드 (Autocomplete Guide) - Prefix Queries","category":"Elastic"}}},{"node":{"excerpt":"Spring Batch Guide 시리즈 Spring Batch의 기본 개념 Spring Batch의 ItemReader - File Item Reader Spring Batch의 ItemReader - DB Item Reader Chapter 3에서는 Spring Batch의 DB ItemReader에 대한 이야기를 다룹니다   Spring의 JDBC …","fields":{"slug":"/spring/batch/spring-batch-chapter-3/"},"frontmatter":{"date":"April 01, 2020","title":"[Spring] 3. Spring Batch의 ItemReader - DB Item Reader","category":"Spring"}}},{"node":{"excerpt":"Docker 시작하기 이 포스팅을 Windows에서 Git Bash로 Docker를 활용해 Ubuntu에서 를 출력하는 것을 목표로 합니다 만약 설치와 Docker의 구조를 모르신다면 아래 포스팅 두개를 보고 오시면 됩니다   Windows10 Docker 설치 Docker의 구조와 Windows10의 Docker   해당 포스팅의 설명은 에서 를 사용하…","fields":{"slug":"/docker/docker-hello-world/"},"frontmatter":{"date":"March 12, 2020","title":"[Docker] Docker 시작하기 - Hello World와 Git Bash","category":"Docker"}}},{"node":{"excerpt":"Docker의 기본 구조 이번 포스트에서는 와 가 있어야만 Docker 설치가 가능한 이유를 알아 보도록 하겠습니다   서버 가상화 (Virtual Machine) 먼저 서버 가상화 기술 2가지에 대해 알아 보겠습니다      하이퍼바이저 Type1 가상화 하이퍼바이저 Type1은 Windows에서 지원하는 가 있습니다 하드웨어를 이용한 가상화 기술로 효…","fields":{"slug":"/docker/docker-structure-windows10/"},"frontmatter":{"date":"March 09, 2020","title":"[Docker] Docker의 구조와 Windows10의 Docker","category":"Docker"}}},{"node":{"excerpt":"Windows 10에서 Docker 설치 하기 1. CPU 가상화 기능 설정하기 Windows10에서는 Hyper-V를 통한 Hypervisor를 활용하여 간단하게 Docker를 설치 할 수 있습니다 하지만 Windows7의 경우 Hyper-V를 지원하지 않아서 VirtualBox를 통해 Docker를 사용할 수 있게 를 지원하고 있습니다 관련해서는 정식…","fields":{"slug":"/docker/docker-setup/"},"frontmatter":{"date":"March 08, 2020","title":"[Docker] Windows10 Docker 설치","category":"Docker"}}},{"node":{"excerpt":"Spring Batch Guide 시리즈 Spring Batch의 기본 개념 Spring Batch의 ItemReader - File Item Reader Spring Batch의 ItemReader - DB Item Reader Chapter 2에서는 Spring Batch의 File ItemReader에 대한 이야기를 다룹니다   앞서 본것과 같이 C…","fields":{"slug":"/spring/batch/spring-batch-chapter-2/"},"frontmatter":{"date":"March 05, 2020","title":"[Spring] 2. Spring Batch의 ItemReader - File Item Reader","category":"Spring"}}},{"node":{"excerpt":"Spring Batch Guide 시리즈 Spring Batch의 기본 개념 Spring Batch의 ItemReader - File Item Reader Spring Batch의 ItemReader - DB Item Reader Chapter 1에서는 Spring Batch의 구조와 동작 방식의 대한 이야기를 다룹니다   Spring의 DI,AOP,서비…","fields":{"slug":"/spring/batch/spring-batch-chapter-1/"},"frontmatter":{"date":"January 30, 2020","title":"[Spring] 1. Spring Batch의 기본 개념","category":"Spring"}}},{"node":{"excerpt":"얼마전 로 시스템을 업그레이드 하였습니다    에서 사용하는 ELK는 를 쓰고 있었습니다 Elastic이랑 Kibana는 문제없이 작동 됐지만 Logstash에서 다음과 같은 에러를 마주 했습니다    해당 에러는 JVM버젼이 안 맞아서 나는 에러 입니다 조금 검색해보면 Elastic에서 제공하는 JVM Support Matrix 페이지를 찾을 수 있습니…","fields":{"slug":"/elastic/elastic-jvm-matrix/"},"frontmatter":{"date":"December 23, 2019","title":"[Elastic] Could not create the Java Virtual Machine Error","category":"Elastic"}}},{"node":{"excerpt":"Spring Scope Spring Bean을 생성시 적용되는 Scope에 대해 알아보려 합니다\n아래 모든 소스의 제 Github에서 확인 하실 수 있습니다   해당 포스팅은 내부적 구현 요소의 대해 설명에 집중하며 Scope의 일반적인 사용법을 보시려면 \n👉 baeldung - spring-bean-scopes   Spring Bean의 Scope는 크…","fields":{"slug":"/spring/scope/spring-scope/"},"frontmatter":{"date":"December 20, 2019","title":"[Spring] Spring의 Scope와 ProxyMode 알아보기","category":"Spring"}}},{"node":{"excerpt":"해당 포스팅은 이전에 속에 사용된 을 조사한 자료가 있어서 포스팅 하게 되었습니다   이 포스팅은 확실한 명확한 해답이 아니며 여러 의견을 분석한 자료를 토대로 작성되었습니다   사건 요약 2014년 심리학 박사 알렉산더 코겐 교수(Dr. Aleksandr )가 ‘this is your digital life’로 부르는 성격 테스트 서비스를 설계했다   …","fields":{"slug":"/data-science/facebook-cambridge-analytica/"},"frontmatter":{"date":"December 10, 2019","title":"[DataScience] 페이스북을 활용한 트럼프의 대선 전략과 LSA 알고리즘","category":"Data Science"}}},{"node":{"excerpt":"RestTemplate은 Spring에서 지원하는 http를 유용하게 쓸 수 있는 템플릿입니다 결론부터 말씀 드리자면 RestTemplate은 Thread Safe하게 설계 되어 만들어 졌습니다 Spring3 : RestTemplate 하지만 프로젝트에서 한번씩의 호출은 문제가 없었지만 연속적인 호출이 있을때 제대로 Connection을 맺지 못하고 Er…","fields":{"slug":"/spring/resttemplate-thread-safe/"},"frontmatter":{"date":"November 07, 2019","title":"[Spring] RestTemplate는 Thread Safe할까?","category":"Spring"}}},{"node":{"excerpt":"Pub-Sub패턴 (또는 게시자/구독자 패턴)은 Reactive Programming을 공부하면서 많이 보게 되는 패턴입니다 에서는 옵저버 패턴과 이 패턴을 같은 패턴으로 설명하지만 엄연한 차이점을 가지고 있습니다 그러면 왜 에서는 옵저버패턴 대신 Pub-Sub패턴를 사용하는지 알아보겠습니다   Pub-Sub패턴을 사용하는 이유? 일반적으로 두 패턴 모두…","fields":{"slug":"/design-pattern/publish-subscribe-pattern/"},"frontmatter":{"date":"October 06, 2019","title":"[DesignPattern] 게시자/구독자 패턴(Publish Subscribe Pattern)이란?","category":"Design Pattern"}}},{"node":{"excerpt":"얼마전 JDK 버젼이야기를 하다가 GC의 대해서 이야기 하는 자리가 생겼습니다 C++같은 언어들에 비해 JVM기반 언어들은 GC가 알아서 메모리 관리를 해주기 때문에 자세히 알아보지 않은 부분들이라 적지않게 당황했습니다 그래서 JVM기반 언어들을 사용한다면 내부 구현의 대해서 어느정도 알아야겠다고 생각했고 GC에 대해 정리 하게되었습니다   JVM 메모리…","fields":{"slug":"/java/garbage-collection/"},"frontmatter":{"date":"October 01, 2019","title":"[JVM] Garbage Collection","category":"Java"}}},{"node":{"excerpt":"이전에 왜 Kotlin을 써야 할까?에서 제가 언급했던 closure에 관한 포스팅을 하려고 합니다   Closure 먼저 closure부터 살펴 보겠습니다 Closure는 라는 의미로 일반적으로 언어마다 조금씩의 차이가 있을수 있겠지만 일반적으로 \n내부 scope를 뛰어 넘어서 하위 함수가 상위 함수의 접근할 수 있는 것을 말합니다 말로 하면 어려우니 …","fields":{"slug":"/kotlin/closure-java-and-kotlin/"},"frontmatter":{"date":"September 22, 2019","title":"[Kotlin] java와 kotlin의 closure에 관하여","category":"Kotlin"}}},{"node":{"excerpt":"LinkedList와 ArrayList 내부구조 알아보기 LinkedList 먼저 부터 알아보겠습니다 LinkedList는 Array가 사이즈를 지정해서 생성해야하는 한계점을 극복하기 위해 고안되었습니다 각각의 Node가 다음값을 참조하게 해서 계속해서 값을 이어나갈수 있는 구조를 가지고 있습니다    Linked List 구조 LinkedList Jav…","fields":{"slug":"/data-structure/likedList-vs-arrayList/"},"frontmatter":{"date":"September 15, 2019","title":"[DataStructure] ArrayList는 왜 LinkedList 보다 빠를까?","category":"Data Structure"}}},{"node":{"excerpt":"Why Kotlin? Kotlin을 처음 공부하고 사용하면서는 많은 불편함을 느꼈습니다 하지만 계속 쓰면 쓸수록 Kotlin이 Java보다 편하다는 명확한 이점을 파악하였고 왜 Kotlin을 사용하는 지에 대해 포스팅하게 되었습니다 1. 간결한 코드 제가 생각하는 첫번째 장점은 간결한 코드가 가능하다는 것입니다 어느 lang이나 간결한 코드는 가능하겠지만…","fields":{"slug":"/kotlin/why-kotlin/"},"frontmatter":{"date":"September 12, 2019","title":"[Kotlin] 왜 Kotlin을 써야 할까?","category":"Kotlin"}}},{"node":{"excerpt":"데코레이터 패턴은 유연한 확장을 지원하는 패턴으로 무언가를 첨가해서 계속해서 장식(decoration)할 때 사용할 수 있는 패턴입니다 원리는 간단합니다 재귀적인 방법으로 클래스를 덫 씌우면서 장식을 추가 합니다  출처 : 위키피디아  Decorator Pattern Sample Code 카페에서 커피를 주문한다고 할때, 우유, 흑당등을 첨가하는 코드입니…","fields":{"slug":"/design-pattern/decorator-pattern/"},"frontmatter":{"date":"September 09, 2019","title":"[DesignPattern] 데코레이터 패턴(Decorator Pattern)이란?","category":"Design Pattern"}}},{"node":{"excerpt":"K-평균 (K-mean cluster) 데이터를 k개의 클러스터로 묶는 알고리즘 이 알고리즘을 데이터를 K개의 그룹으로 묶고 싶을때 사용하는 알고리즘 중 하나입니다\n방법은 간단합니다 K-means 출처 : 위키피디아  K-mean 알고리즘 방식  k개의 점을 잡는다   데이터들을 가장 가까운 k개의 점으로 묶는다   k점들을 묶은 데이터를 기반으로 중심점…","fields":{"slug":"/data-science/k-mean-algorithm/"},"frontmatter":{"date":"September 07, 2019","title":"[DataScience] K-mean","category":"Data Science"}}},{"node":{"excerpt":"메인 프로세스에서 상황에 맞게 전략을 선택하여 실행하는 패턴입니다   \n출처 : 위키피디아  이 패턴은 가장 기본적이며 인터페이스의 필요여부를 가장 잘 보여 주고 많은 곳에서 사용하고 있는 패턴입니다 이 그림에서 볼 수 있듯이 하나의 인터페이스를 두고 클래스들이 인터페이스를 구현하여 사용됩니다   Strategy Sample StrategyInterfac…","fields":{"slug":"/design-pattern/strategy-pattern/"},"frontmatter":{"date":"September 07, 2019","title":"[DesignPattern] 전략 패턴(Strategy Pattern)이란?","category":"Design Pattern"}}},{"node":{"excerpt":"얼마전 Reactive Programing을 공부하면서 백기선님의 유튜브를 보다 문득 의문이 생기는 부분이 있었습니다 “asynchronous하면 당연히 non-blocking 되는 게 아닌가?”  지금까지 저는 비동기면 당연히 논블록킹하다고 생각하고 있었습니다 그래서 알아보게 되었습니다   동기(Synchronous)와 비동기(Asynchronous) …","fields":{"slug":"/notion/blocking-nonBlocking-synchronous-asynchronous/"},"frontmatter":{"date":"September 06, 2019","title":"[Notion] 동기(Synchronous)와 비동기(Asynchronous) & 블로킹(Blocking)과 논블로킹(NonBlocking)","category":"Notion"}}},{"node":{"excerpt":"옵저버 패턴은 Java 내부와 Spring Core, Reative Programming의 기본이 되는 패턴입니다\n옵저버 디자인 패턴은 기본적으로 와 를 가지고 있습니다   1. Subject Observer의 Manager 개념으로 Observer를 등록하여 특정 이벤트가 발생했을때 관찰자들이 알 수 있도록 해준다   2. Observer 실제 관찰자로…","fields":{"slug":"/design-pattern/observer-pattern/"},"frontmatter":{"date":"September 05, 2019","title":"[DesignPattern] 옵저버 패턴(Observer Pattern)이란?","category":"Design Pattern"}}},{"node":{"excerpt":"AOP (Aspect-Oriented Programming) AOP는 관점 지향 프로그래밍으로 핵심 비즈니스 기능과 공통기능을 분리하여 공통기능의 중복을 없애고 객체들간의 관계 복잡도를 줄이는데 사용된다 위빙(Weaving)을 통해 핵심기능에서 벗어난 공통기능을 정의하고 사용할 수 있다록 한다   이렇게 해서 얻을 수 있는 이점을 크게 두가지이다   Sp…","fields":{"slug":"/spring/spring-aop/"},"frontmatter":{"date":"September 04, 2019","title":"[Spring] Spring AOP란?","category":"Spring"}}},{"node":{"excerpt":"스코어 정렬에 머신러닝 알고리즘을 사용 \n(LTR Structure) LTR: Steps to take point wise (Regression) : score를 머신 러닝으로 생성\n   pair wise (RankNet, LambdaMART) : 2개씩 비교하며 order를 분류\n   list wise (List Net) : 전체리스트를 한번에 분류 \n…","fields":{"slug":"/data-science/learning-to-rank/"},"frontmatter":{"date":"October 05, 2018","title":"[DataScience] LTR(Learning To Rank)","category":"Data Science"}}},{"node":{"excerpt":"ElasticSearch에서 spring에 있는 RestTemplate를 사용하기 위해서는 RestTemplate의 Post전달 처음엔 을 로 선언했었는데 이상 없이 보였지만 한글이 들어간 쿼리는 그냥 아무 값이나 전부 가져오는 현상을 보였다   Configuration로 정의 지금은 RestTemplate말고 elastic-rest-client를 사용하…","fields":{"slug":"/elastic/elastic-spring-resttemplate/"},"frontmatter":{"date":"October 04, 2018","title":"[Elastic] RestTemplate Elastic 통신","category":"Elastic"}}},{"node":{"excerpt":"elastic을 쓰면서 경험한 timezone Issues에 관한 글입니다   Logstash Logstash의 timezone은 색인할때의 정보가 아닌 filter 자체의 timezone으로 데이터로써 @timestamp의 Asia/Seoul로 설정할시에 기존 시간에서 -9시간을 한 시간을 가져 오게 된다   Logstash의 시간을 설정할 포맷을 정의…","fields":{"slug":"/elastic/elastic-timezone/"},"frontmatter":{"date":"December 28, 2017","title":"[Elastic] ElasticSearch Timezone 문제","category":"Elastic"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}